x-postgres-common:
  &postgres-common
  image: postgres:17.6-alpine3.22
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U user --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5

x-postgres_replica:
  &postgres_replica
  <<: *postgres-common
  # ports:
  #   - 5433:5432
  command: |
    bash -c "
    until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=$${REPLICATION_SLOT?[ERROR] ENV VAR REPLICATION SLOT NOT SET} --host=pg-0 --port=5432
    do
    echo 'Waiting for primary to connect...'
    sleep 1s
    done
    echo 'Backup done, starting replica...'
    chmod 0700 /var/lib/postgresql/data
    postgres
    # - c promote_trigger_file=''
    "
  # depends_on:
  #   - pg-0
  environment: &replica_environments
    PGUSER: replicator
    PGPASSWORD: replicator_password
    REPLICATION_SLOT: replication_slot


services:
  pg-0:
    <<: *postgres-common
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      # -c synchronous_commit='*'
      # -c synchronous_standby_name='*'
      # -c wal_log_hint=on
    volumes:
      - ./00_init_primary.sql:/docker-entrypoint-initdb.d/00_init.sql
      - ${DATA_VOLUME?[ERROR] ENV VAR DATA_VOLUME NOT SET!}/postgres/primary/pgdata:/var/lib/postgresql/data

  pg-1:
    <<: *postgres_replica
    environment:
      <<: *replica_environments
      REPLICATION_SLOT: ${REPLICATION_SLOT_1?[ERROR] ENV VAR REPLICATION_SLOT_1 NOT SET}
    volumes:
      - ${DATA_VOLUME?[ERROR] ENV VAR DATA_VOLUME NOT SET!}/postgres/replica-1/pgdata:/var/lib/postgresql/data


  pg-2:
    <<: *postgres_replica
    environment:
      <<: *replica_environments
      REPLICATION_SLOT: ${REPLICATION_SLOT_2?[ERROR] ENV VAR REPLICATION_SLOT_2 NOT SET}
    volumes:
      - ${DATA_VOLUME?[ERROR] ENV VAR DATA_VOLUME NOT SET!}/postgres/replica-2/pgdata:/var/lib/postgresql/data